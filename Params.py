import argparse

def ParseArgs():
	parser = argparse.ArgumentParser(description='Model Params')
	parser.add_argument('--lr', default=5e-4, type=float, help='learning rate')
	parser.add_argument('--weight_decay', default=0, type=float, help='weight_decay')
	parser.add_argument('--batch', default=1024, type=int, help='batch size') # 1024
	parser.add_argument('--valBat', default=256, type=int, help='number of users in a eval batch') # 256
	parser.add_argument('--tstBat', default=256, type=int, help='number of users in a testing batch') # 256
	parser.add_argument('--reg', default=1e-5, type=float, help='weight decay regularizer') # 1e-5s
	parser.add_argument('--epoch', default=200, type=int, help='number of epochs')
	parser.add_argument('--latdim', default=64, type=int, help='embedding size')
	parser.add_argument('--gnn_layer', default=1, type=int, help='number of gnn layers')
	# parser.add_argument('--topk', default=20, type=int, help='K of top K')
	parser.add_argument('--topk', nargs='+', type=int, default=[20, 10, 50], help='List of top-K values')
	parser.add_argument('--data', default='allrecipes', type=str, help='name of dataset')
	parser.add_argument('--ssl_reg', default=1e-2, type=float, help='weight for contrative learning')
	parser.add_argument('--temp', default=0.02, type=float, help='temperature in contrastive learning')
	parser.add_argument('--tstEpoch', default=1, type=int, help='number of epoch to test while training')
	parser.add_argument('--gpu', default='0', type=str, help='indicates which gpu to use')
	parser.add_argument("--seed", type=int, default=421, help="random seed")
	parser.add_argument('--earlystopping', default=20, type=int, help='earlystopping patience')

	parser.add_argument('--keepRate', default=0.5, type=float, help='ratio of edges to keep')

	# parser.add_argument('--dims', type=str, default='[1000]')
	parser.add_argument('--dims', type=str, default='[1000]')
	parser.add_argument('--d_emb_size', type=int, default=10)
	parser.add_argument('--norm', type=bool, default=False)
	parser.add_argument('--steps', type=int, default=5)
	parser.add_argument('--noise_scale', type=float, default=0.05)
	parser.add_argument('--noise_min', type=float, default=0.0001)
	parser.add_argument('--noise_max', type=float, default=0.02)

	parser.add_argument('--sampling_noise', type=bool, default=False)
	parser.add_argument('--sampling_steps', type=int, default=0)

	parser.add_argument('--rebuild_k', type=int, default=1)
	parser.add_argument('--e_loss', type=float, default=0.1)
	parser.add_argument('--ris_lambda', type=float, default=0.5)
	parser.add_argument('--ris_adj_lambda', type=float, default=0.2)
	parser.add_argument('--trans', type=int, default=0, help='0: R*R, 1: Linear, 2: allrecipes')
	parser.add_argument('--cl_method', type=int, default=0, help='0:m vs m ; 1:m vs main')

	parser.add_argument('--mse', default='sce', type=str, help='mse or sce')
	parser.add_argument("--alpha_l", type=float, default=2, help="`pow`inddex for `sce` loss")
	parser.add_argument('--mm_layers', type=int, default=1, help='mm GCN layers')
	parser.add_argument('--behavior_layers', default=3, type=int, help='number of gnn layers')
	parser.add_argument('--n_hyper_layer', type=int, default=1, help='mm HGCN layers')
	parser.add_argument('--mean', default='mean', type=str, help='mean or last layer')
	parser.add_argument('--w_tau', type=float, default=0.1, help="pre-defined score weight")
	parser.add_argument('--edge_keeprate', type=float, default=0.8, help="edge keeprate in Am matrices")
	parser.add_argument('--no_grad', type=bool, default=True, help="torch.no_grad or not")
	parser.add_argument('--detach', type=bool, default=False, help="torch.no_grad or not")
	parser.add_argument('--hyper_num', type=int, default=8, help='hyperedge num')
	parser.add_argument('--dropout_rate1', type=float, default=0.1, help="pre-defined score weight")
	parser.add_argument('--dropout_rate2', type=float, default=0.1, help="pre-defined score weight")
	parser.add_argument('--denoise_drop', type=float, default=0.5, help="pre-defined score weight")
	parser.add_argument('--mm_embeds', type=float, default=1.0, help="mm_embeds")
	parser.add_argument('--denoise_embeds', type=float, default=0.5, help="denoise_embeds")
	parser.add_argument('--alpha', type=float, default=0.9, help="denoise_embeds")
	parser.add_argument('--data_path', default='./Datasets/', type=str, help='')
	parser.add_argument('--image_knn_k', type=int, default=10, help='hyperedge num')
	parser.add_argument('--text_knn_k', type=int, default=10, help='hyperedge num')
	parser.add_argument('--audio_knn_k', type=int, default=10, help='hyperedge num')
	parser.add_argument('--lambda_diff', type=float, default=0.1, help="denoise_embeds")
	parser.add_argument('--lambda_differ', type=float, default=0.01, help="denoise_embeds")
	return parser.parse_args()
args = ParseArgs()
